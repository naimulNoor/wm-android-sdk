plugins {
    id 'maven-publish'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.android.library'
}


android {
    namespace 'com.wallemix.paymix.opg'
    defaultConfig {
        minSdkVersion 19
        compileSdkVersion 33
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    kapt {
        generateStubs = true
    }
    publishing {
        singleVariant("release") {
            withSourcesJar()
            withJavadocJar()
        }
    }
}


dependencies {

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.core:core-ktx:1.10.1'

    def androidx_version = '1.6.1'



    // Retrofit
    def retrofit_version = '2.9.0'
    def retrofit_loggingInterceptor = '5.0.0-alpha.11'
    def multidex_version = "2.0.1"

    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.9.0-Beta'
    implementation "androidx.appcompat:appcompat:$androidx_version"

    // RETROFIT
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$retrofit_loggingInterceptor"
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation "androidx.annotation:annotation:1.6.0"
    implementation "androidx.multidex:multidex:$multidex_version"


}


publishing {
    publications {
        release(MavenPublication) {
            groupId = 'com.gitlab.naimulNoor'
            artifactId = 'paymix_opg'
            version = '0.0.1'

            afterEvaluate {
                from components.release

            }
        }
    }
}
tasks.register("prepareKotlinBuildScriptModel"){}